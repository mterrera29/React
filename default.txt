import React from 'react';
import './style.css';
import { useState } from 'react';

export default function App() {
  const [counter, setCounter] = useState(0);
  console.log('hola');
  function restar() {
    if (counter > 0) {
      setCounter(counter - 1);
    } else {
      setCounter(counter);
    }
  }

  return (
    <div>
      <h1>Hello StackBlitz!</h1>
      <p>{counter}</p>
      <button onClick={() => setCounter(counter + 1)}>sumar + </button>
      <button onClick={() => setCounter(restar)}>restar - </button>
      <button onClick={() => setCounter(counter - counter)}>reset</button>
    </div>
  );
}


/////



import React from 'react';
import './style.css';
import { useState } from 'react';

export default function App() {
  const [contador, setContador] = useState(0);
  const [fecha, setFecha] = useState('');

  const sumar = () => {
    let hoy = new Date();
    setContador(contador + 1);
    setFecha(String(hoy.toUTCString()));
  };

  return (
    <div>
      <h1>Hello StackBlitz!</h1>
      <p>
        {contador} {fecha}
      </p>
      <button onClick={sumar}>CLICK&DATE</button>
    </div>
  );
}




  
  /* ///promise
  const getDatos = () =>{
    return new Promise((resolve,reject)=>{
      if(Data.length === 0){
        reject(new Error ("No hay datos"))
      }
        setTimeout(()=>{
          setLoading(false)
          resolve(Data)
        }, 1000);
    });
  }
  ///async 
  async function fetchingData(){
    try{
    const datosFetched = await getDatos();
    return datosFetched;
    }catch (err){
      console.log(err);
    }
  }
  useEffect(() =>{
    fetchingData().then((product) => setProduct(product))
  }, []) */


  /* useEffect(() => {
    const db = getFirestore();

    const prod = doc(db, "productos", `${id}`);
    getDoc(prod).then((snapshot) => {
      if (snapshot.exists()) {
        setProduct({id:snapshot.id, ...snapshot.data()});
        setLoading(false)
      } else {
        console.log("Producto no encontrado");
      }
    });
  }, []); */



   /* ///promise
  const getDatos = () =>{
    return new Promise((resolve,reject)=>{
      if(Data.length === 0){
        reject(new Error ("No hay datos"))
      }
        setTimeout(()=>{
          setLoading(false)
          resolve(Data)
        }, 1000);
    });
  }
  ///async 
  async function fetchingData(){
    try{
      const datosFetched = await getDatos();
      return datosFetched;
     }catch (err){
      console.log(err);
    }
  }
  useEffect(() =>{
    fetchingData().then((product) => setProduct(product))
  }, []) */
